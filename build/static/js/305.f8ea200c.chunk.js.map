{"version":3,"file":"static/js/305.f8ea200c.chunk.js","mappings":"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","sources":["app/reducers/addPokemonToList.ts","components/CompareContainer.tsx","pages/Compare.tsx","sections/Wrapper.tsx"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { addDoc } from \"firebase/firestore\";\nimport { pokemonListRef } from \"../../utils/firebaseConfig\";\nimport { getUserPokemons } from \"./getUserPokemons\";\nimport { setToast } from \"../slices/AppSlice\";\nimport {\n  pokemonStatsType,\n  pokemonTypeInterface,\n  userPokemonsType,\n} from \"../../utils/types\";\nimport { RootState } from \"../store\";\n\nexport const addPokemonToList = createAsyncThunk(\n  \"pokemon/addPkemon\",\n  async (\n    pokemon: {\n      id: number;\n      name: string;\n      types: pokemonTypeInterface[] | string[];\n      stats?: pokemonStatsType[];\n    },\n    { getState, dispatch }\n  ) => {\n    try {\n      const {\n        app: { userInfo },\n        pokemon: { userPokemons },\n      } = getState() as RootState;\n      if (!userInfo?.email) {\n        return dispatch(\n          setToast(\"Please login in order to add pokemon to your collection.\")\n        );\n      }\n      const index = userPokemons.findIndex((userPokemon: userPokemonsType) => {\n        return userPokemon.name === pokemon.name;\n      });\n      if (index === -1) {\n        let types: string[] = [];\n        if (!pokemon.stats) {\n          pokemon.types.forEach((type: any) =>\n            types.push(Object.keys(type).toString())\n          );\n        } else {\n          types = pokemon.types as string[];\n        }\n        await addDoc(pokemonListRef, {\n          pokemon: { id: pokemon.id, name: pokemon.name, types },\n          email: userInfo.email,\n        });\n        await dispatch(getUserPokemons());\n        dispatch(setToast(`${pokemon.name} added to your collection.`));\n      } else {\n        dispatch(setToast(`${pokemon.name} already part of your collection.`));\n      }\n    } catch (err) {\n      console.log({ err });\n    }\n  }\n);\n","import React from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { removeFromCompare } from \"../app/slices/PokemonSlice\";\nimport { useAppDispatch } from \"../app/hooks\";\nimport { addPokemonToList } from \"../app/reducers/addPokemonToList\";\nimport { pokemonTypes } from \"../utils\";\nimport {\n  pokemonStatType,\n  pokemonTypeInterface,\n  userPokemonsType,\n} from \"../utils/types\";\nfunction CompareContainer({\n  pokemon = undefined,\n  isEmpty = false,\n}: {\n  pokemon?: userPokemonsType;\n  isEmpty?: boolean;\n}) {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const createStatsArray = (\n    types: pokemonTypeInterface[],\n    statType: pokemonStatType\n  ) => {\n    const statsArray: { name: string; image: string }[] = [];\n    const statsSet = new Set<string>();\n    types.forEach((type: pokemonTypeInterface) => {\n      const key = Object.keys(type)[0];\n      type[key][statType].forEach((stat: string) => {\n        if (!statsSet.has(stat)) {\n          // @ts-ignore\n          statsArray.push({ name: stat, image: pokemonTypes[stat].image });\n          statsSet.add(stat);\n        }\n      });\n    });\n    return statsArray;\n  };\n  const getStats = () => {\n    return (\n      <>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Strength</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"strength\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Weakness</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"weakness\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Resistance</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"resistance\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Vulnerable</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"vulnerable\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"compare-container\">\n      {isEmpty && (\n        <div className=\"empty\">\n          <button onClick={() => navigate(\"/search\")}>\n            <FaPlus />\n          </button>\n          <h3>Add Pokemon for Comparison</h3>\n        </div>\n      )}\n      {pokemon && (\n        <div className=\"compare-element\" key={pokemon?.id}>\n          <div className=\"compare-info\">\n            <div className=\"compare-details\">\n              <h3>{pokemon?.name}</h3>\n              <img\n                src={pokemon?.image}\n                alt=\"pokemon\"\n                className=\"compare-image\"\n              />\n            </div>\n            <div className=\"pokemon-types-container\">\n              <div className=\"pokemon-types\">\n                <h4 className=\"pokemon-type-title\">Type</h4>\n                <div className=\"pokemon-type-icons\">\n                  {pokemon?.types.map((type: pokemonTypeInterface) => {\n                    const keys = Object.keys(type);\n                    return (\n                      <div className=\"pokemon-type\">\n                        <img\n                          src={type[keys[0]].image}\n                          alt=\"pokemon type\"\n                          className=\"pokemon-type-image\"\n                          loading=\"lazy\"\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              {getStats()}\n            </div>\n          </div>\n          <div className=\"compare-action-buttons\">\n            <button\n              className=\"compare-btn\"\n              onClick={() => {\n                dispatch(addPokemonToList(pokemon));\n              }}\n            >\n              Add\n            </button>\n            <button\n              className=\"compare-btn\"\n              onClick={() => navigate(`/pokemon/${pokemon?.id}`)}\n            >\n              View\n            </button>\n            <button\n              className=\"compare-btn\"\n              onClick={() => dispatch(removeFromCompare({ id: pokemon?.id }))}\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CompareContainer;\n","import React from \"react\";\nimport Wrapper from \"../sections/Wrapper\";\nimport CompareContainer from \"../components/CompareContainer\";\nimport { useAppSelector } from \"../app/hooks\";\n\nfunction Compare() {\n  const { compareQueue } = useAppSelector(({ pokemon }) => pokemon);\n  return (\n    <div className=\"compare\">\n      <CompareContainer\n        pokemon={compareQueue[0]}\n        isEmpty={compareQueue.length < 1}\n      />\n      <CompareContainer\n        pokemon={compareQueue[1]}\n        isEmpty={compareQueue.length < 2}\n      />\n    </div>\n  );\n}\n\nexport default Wrapper(Compare);\n","import React from \"react\";\n\nconst Wrapper = (Component: React.FC) => () => {\n  return (\n    <div className=\"content\">\n      <Component />\n    </div>\n  );\n};\n\nexport default Wrapper;\n"],"names":["addPokemonToList","createAsyncThunk","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pokemon","_ref","getState","dispatch","_ref3","userInfo","userPokemons","types","wrap","_context","prev","next","app","email","abrupt","setToast","findIndex","userPokemon","name","stats","forEach","type","push","Object","keys","toString","addDoc","pokemonListRef","id","getUserPokemons","concat","t0","console","log","err","stop","_x","_x2","apply","arguments","_ref$pokemon","undefined","_ref$isEmpty","isEmpty","navigate","useNavigate","useAppDispatch","createStatsArray","statType","statsArray","statsSet","Set","stat","has","image","pokemonTypes","add","_jsxs","className","children","_jsx","onClick","FaPlus","src","alt","map","loading","_Fragment","removeFromCompare","Wrapper","compareQueue","useAppSelector","CompareContainer","length","Component"],"sourceRoot":""}